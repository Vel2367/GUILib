function Window:Button(section, name, options, callback)
    options = options or {}
    callback = callback or function() end
    local flag, location, default = options.flag, options.location, options.default or false

    local SectionFrame = SectionFinder:FindFirstChild(section)
    if not SectionFrame then return end

    local Button = Instance.new("Frame", SectionFrame)
    local UICorner = Instance.new("UICorner", Button)
    local Text = Instance.new("TextLabel", Button)
    local Toggle = Instance.new("Frame", Button)
    local ToggleCorner = Instance.new("UICorner", Toggle)

    Button.Name = "Button"
    Button.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    Button.Size = UDim2.new(1, 0, 0, 30)

    UICorner.CornerRadius = UDim.new(0, 6)

    Text.Name = "Text"
    Text.BackgroundTransparency = 1
    Text.Position = UDim2.new(0, 10, 0, 0)
    Text.Size = UDim2.new(1, -40, 1, 0)
    Text.Font = Enum.Font.GothamBold
    Text.Text = name
    Text.TextSize = 14
    Text.TextColor3 = Color3.fromRGB(255, 255, 255)
    Text.TextXAlignment = Enum.TextXAlignment.Left

    Toggle.Name = "Toggle"
    Toggle.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
    Toggle.Size = UDim2.new(0, 25, 0, 25)
    Toggle.Position = UDim2.new(1, -35, 0.5, -12)

    ToggleCorner.CornerRadius = UDim.new(1, 0)

    if location and flag then
        location[flag] = Button
    end

    if default then
        Text.TextColor3 = default
    end

    Button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            task.spawn(callback)
        end
    end)
end
