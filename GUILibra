local GUI = {}

if game.CoreGui:FindFirstChild("ScriptGui") then
    game.CoreGui.ScriptGui:Destroy()
end

if _G.HideKeybind == nil then _G.HideKeybind = Enum.KeyCode.P end

getgenv().Theme = {
    Background = Color3.fromRGB(15, 15, 15),
    Accent = Color3.fromRGB(30, 30, 30),
    AccentAlt = Color3.fromRGB(50, 50, 50),
    Highlight = Color3.fromRGB(80, 170, 255),
    Text = Color3.fromRGB(255, 255, 255),
    Stroke = Color3.fromRGB(100, 100, 100),
    Gradient1 = Color3.fromRGB(80, 80, 255),
    Gradient2 = Color3.fromRGB(255, 80, 255),
    SelectedTab = Color3.fromRGB(60, 60, 90),
    HoverTab = Color3.fromRGB(45, 45, 65),
    UGLLine = NumberSequence.new{
        NumberSequenceKeypoint.new(0,0.98),
        NumberSequenceKeypoint.new(0.25,0),
        NumberSequenceKeypoint.new(0.5,0),
        NumberSequenceKeypoint.new(0.75,0),
        NumberSequenceKeypoint.new(1,0.98)
    },
    BackgroundMain = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 20)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 30))
    },
    Line = Color3.fromRGB(255, 255, 255),
    SettingButton = Color3.fromRGB(40, 40, 40)
}

local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")
local visible, Usable = true, true

local ScriptGui = Instance.new("ScreenGui")
ScriptGui.Name = "ScriptGui"
ScriptGui.Parent = game.CoreGui

UIS.InputBegan:Connect(function(input, gameProcesses)
    if gameProcesses or input.KeyCode ~= _G.HideKeybind or not Usable then return end
    Usable = false
    visible = not visible
    for _, v in pairs(ScriptGui:GetDescendants()) do
        if v:IsA("GuiObject") then
            v.Visible = visible
        end
    end
    Usable = true
end)

function GUI:Window(config)
    local Tabs = {}
    local createdSections = {}

    local Main = Instance.new("Frame", ScriptGui)
    local UICMain = Instance.new("UICorner", Main)
    local UIGMain = Instance.new("UIGradient", Main)
    local Line = Instance.new("Frame", Main)
    local UIGLine = Instance.new("UIGradient", Line)
    local Title = Instance.new("Frame", Main)
    local TabHolder = Instance.new("ScrollingFrame", Main)
    local UIGLTabHolder = Instance.new("UIGridLayout", TabHolder)
    local SectionHolder = Instance.new("Frame", Main)
    local SettingsButton = Instance.new("TextButton", Main)
    local UICSet = Instance.new("UICorner", SettingsButton)

    Main.Name = "Main"
    Main.Size = UDim2.new(0,650,0,450)
    Main.Position = UDim2.new(0.5,-325,0.5,-225)
    Main.BackgroundColor3 = getgenv().Theme.Background
    UICMain.CornerRadius = UDim.new(0, 8)
    UIGMain.Color = getgenv().Theme.BackgroundMain

    Line.Name = "Line"
    Line.Position = UDim2.new(0.025,0,0.10,0)
    Line.Size = UDim2.new(0.95,0,0,3)
    Line.BorderSizePixel = 0
    Line.BackgroundColor3 = getgenv().Theme.Line
    UIGLine.Transparency = getgenv().Theme.UGLLine

    Title.Name = "Title"
    Title.Position = UDim2.new(0,0,0,0)
    Title.Size = UDim2.new(1,0,0.15,0)
    Title.BackgroundTransparency = 1
    Title.BorderSizePixel = 0

    TabHolder.Name = "TabsHolder"
    TabHolder.Position = UDim2.new(0.025,0,0.175,0)
    TabHolder.Size = UDim2.new(0.15,0,0.8,0)
    TabHolder.BackgroundTransparency = 1
    TabHolder.BorderSizePixel = 0
    TabHolder.ScrollBarThickness = 0
    UIGLTabHolder.CellPadding = UDim2.new(0,1,0,7)
    UIGLTabHolder.FillDirection = Enum.FillDirection.Vertical
    UIGLTabHolder.VerticalAlignment = Enum.VerticalAlignment.Top
    UIGLTabHolder.CellSize = UDim2.new(1,0,0,90)

    SectionHolder.Name = "SectionsHolder"
    SectionHolder.Position = UDim2.new(0.2,0,0.175,0)
    SectionHolder.Size = UDim2.new(0.775,0,0.8,0)
    SectionHolder.BackgroundTransparency = 1
    SectionHolder.BorderSizePixel = 0

    SettingsButton.Text = "⚙️"
    SettingsButton.Font = Enum.Font.Code
    SettingsButton.TextSize = 18
    SettingsButton.TextColor3 = getgenv().Theme.Text
    SettingsButton.BackgroundColor3 = getgenv().Theme.SettingButton
    SettingsButton.Size = UDim2.new(0, 32, 0, 32)
    SettingsButton.Position = UDim2.new(0.8, 0, 0.05, -15)
    SettingsButton.BorderSizePixel = 0
    SettingsButton.AutoButtonColor = false
    UICSet.CornerRadius = UDim.new(0, 6)

    SettingsButton.MouseButton1Click:Connect(function()
        print("Открыты настройки GUI")
    end)

    local function UpdateCanvas(scrollFrame)
        local grid = scrollFrame:FindFirstChildOfClass("UIGridLayout")
        grid:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, grid.AbsoluteContentSize.Y + 10)
            scrollFrame.ScrollingEnabled = grid.AbsoluteContentSize.Y > scrollFrame.AbsoluteSize.Y
        end)
    end
    UpdateCanvas(TabHolder)

    local function MakeDrag(frame, handle)
        local dragging = false
        local dragStart, startPos

        handle.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = frame.Position
            end
        end)

        handle.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)

        UIS.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                frame.Position = startPos + UDim2.fromOffset(delta.X, delta.Y)
            end
        end)
    end
    MakeDrag(Main, Title)

    for _, tabData in ipairs(config.Tabs or {}) do
        local tabButton = Instance.new("TextButton", TabHolder)
        local UICtabButton = Instance.new("UICorner", tabButton)
        local contentFrame = Instance.new("Frame", SectionHolder)
        tabButton.Size = UDim2.new(1, 0, 0, 90)
        tabButton.BorderSizePixel = 0
        tabButton.BackgroundColor3 = getgenv().Theme.Accent
        tabButton.Text = tabData.Name
        tabButton.TextColor3 = getgenv().Theme.Text
        tabButton.Font = Enum.Font.Code
        tabButton.TextSize = 16
        tabButton.AutoButtonColor = false
        UICtabButton.CornerRadius = UDim.new(0, 10)

        contentFrame.Name = tabData.Name .. "_Content"
        contentFrame.Size = UDim2.new(1, 0, 1, 0)
        contentFrame.BackgroundTransparency = 1
        contentFrame.Visible = false

        tabButton.MouseButton1Click:Connect(function()
            for _, v in pairs(SectionHolder:GetChildren()) do
                if v:IsA("Frame") then v.Visible = false end
            end
            for _, v in pairs(TabHolder:GetChildren()) do
                if v:IsA("TextButton") then
                    v.BackgroundColor3 = getgenv().Theme.Accent
                end
            end
            contentFrame.Visible = true
            tabButton.BackgroundColor3 = getgenv().Theme.Background
        end)

        for _, sec in ipairs(tabData.Sections or {}) do
            local wrapper = Instance.new("Frame", contentFrame)
            wrapper.Name = sec.Name or "Section"
            wrapper.BackgroundTransparency = 1
            wrapper.Size = sec.Size or UDim2.new(0.48, 0, 1, 0)
            wrapper.Position = sec.Position or UDim2.new(0, 0, 0, 0)

            local label = Instance.new("TextLabel", wrapper)
            label.Text = sec.Name or "Section"
            label.TextColor3 = Color3.fromRGB(190, 190, 190)
            label.BackgroundTransparency = 1
            label.Font = Enum.Font.Code
            label.TextSize = 16
            label.TextXAlignment = Enum.TextXAlignment.Left
            label.Size = UDim2.new(1, 0, 0, 18)

            local section = Instance.new("ScrollingFrame", wrapper)
            section.Size = UDim2.new(1, 0, 1, -18)
            section.Position = UDim2.new(0, 0, 0, 18)
            section.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            section.BorderSizePixel = 0
            section.AutomaticCanvasSize = Enum.AutomaticSize.Y
            section.CanvasSize = UDim2.new(0, 0, 0, 0)
            section.ScrollBarThickness = 4

            local layout = Instance.new("UIListLayout", section)
            layout.Padding = UDim.new(0, 5)
            layout.SortOrder = Enum.SortOrder.LayoutOrder
            
            local padding = Instance.new("UIPadding", section)
            padding.PaddingTop = UDim.new(0, 5)
            padding.PaddingLeft = UDim.new(0, 10)
            padding.PaddingRight = UDim.new(0, 10)
            padding.PaddingBottom = UDim.new(0, 10)

            table.insert(createdSections, section)
        end

        table.insert(Tabs, {Button = tabButton, Content = contentFrame})
    end

    if Tabs[1] then
        Tabs[1].Button.MouseButton1Click:Connect(function() end)
        Tabs[1].Button.MouseButton1Click:Fire()
        Tabs[1].Content.Visible = true
        Tabs[1].Button.BackgroundColor3 = getgenv().Theme.Background
    end

    return {
        Sections = createdSections,
        Main = Main
    }
end

return GUI
