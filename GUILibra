local Lib = {}

local player = game.Players.LocalPlayer
local Uis = game:GetService("UserInputService")
local TS = game:GetService("TweenService")
local Mouse = player:GetMouse()
local MarketplaceService = game:GetService("MarketplaceService")
local Minimized, MinimizeUsable, visible, Usable = false, true, true, true
if _G.HideKeybind == nil then _G.HideKeybind = Enum.KeyCode.P end


if game.CoreGui:FindFirstChild("ScriptGui") then
    game.CoreGui["ScriptGui"]:Destroy()
end

local ScriptGui = Instance.new("ScreenGui")
ScriptGui.Name = "ScriptGui"
ScriptGui.ResetOnSpawn = false
ScriptGui.Parent = game.CoreGui

Uis.InputBegan:Connect(function(input, gameProcesses)
    if gameProcesses or input.KeyCode ~= _G.HideKeybind or not Usable then return end
    Usable = false
    visible = not visible
    for _, v in pairs(ScriptGui:GetDescendants()) do
        if v:IsA("GuiObject") then
            v.Visible = visible
        end
    end
    Usable = true
end)

function CreateRainbowWave(object)
    local gradient = Instance.new("UIGradient", object)
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.fromRGB(255, 165, 0)),
        ColorSequenceKeypoint.new(0.33, Color3.fromRGB(255, 255, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)),
        ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)),
        ColorSequenceKeypoint.new(0.83, Color3.fromRGB(75, 0, 130)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(148, 0, 211))
    }
    gradient.Rotation = 0
end



function Lib:Window()
    local Window = {}
    local Tabs = {}
    local ActiveButton = nil
    local ActiveLine = nil

    local Main = Instance.new("Frame", ScriptGui)
    local MainStroke = Instance.new("UIStroke", Main)
    local TitleFrame = Instance.new("Frame", Main)
    local Line = Instance.new("Frame", TitleFrame)
    local TabHolder = Instance.new("ScrollingFrame", Main)
    local ContentFrame = Instance.new("Frame", Main)
    local TabHolderLayout = Instance.new("UIListLayout", TabHolder)


    Main.Size = UDim2.new(0,900,0,600)
    Main.Position = UDim2.new(0.5,-450,0.5,-300)
    Main.Active = true
    Main.BackgroundColor3 = Color3.fromRGB(45,45,45)

    MainStroke.Color = Color3.fromRGB(110,110,110)
    MainStroke.Thickness = 3

    TitleFrame.Position = UDim2.new(0,0,0,0)
    TitleFrame.Size = UDim2.new(1,0,0.15,0)
    TitleFrame.Active = true
    TitleFrame.BackgroundTransparency = 1

    Line.Size = UDim2.new(0.9998,0,0,3)
    Line.Position = UDim2.new(0,0,0,0)
    Line.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    Line.BorderSizePixel = 0
    CreateRainbowWave(Line)
    

    TabHolder.Size = UDim2.new(0.15,0,0.85,0)
    TabHolder.Position = UDim2.new(0.025,0,0.15,0)
    TabHolder.ScrollBarThickness = 0
    TabHolder.BackgroundTransparency = 1

    TabHolderLayout.Padding = UDim.new(0, 5)

    ContentFrame.Size = UDim2.new(0.8, 0, 0.85, 0)
    ContentFrame.Position = UDim2.new(0.2, 0, 0.15, 0)
    ContentFrame.BackgroundTransparency = 1

    local function MakeDraggable(frame, handle)
        local dragging, dragStart, startPos

        handle.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = frame.Position
            end
        end)

        handle.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)

        Uis.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                frame.Position = UDim2.new(
                    startPos.X.Scale, startPos.X.Offset + delta.X,
                    startPos.Y.Scale, startPos.Y.Offset + delta.Y
                )
            end
        end)
    end
    MakeDraggable(Main, TitleFrame)

    function Window:Tab(Name)
        Tabs[Name] = Instance.new("Frame", ContentFrame)
        local TabStroke = Instance.new("UIStroke", Tabs[Name])
        local button = Instance.new("TextButton", TabHolder)
        local line = Instance.new("Frame", button)

        Tabs[Name].Size = UDim2.new(0.97, 0, 0.97, 0)
        Tabs[Name].BackgroundTransparency = 0
        Tabs[Name].Visible = false
        Tabs[Name].BackgroundColor3 = Color3.fromRGB(35,35,35)
        Tabs[Name].BorderSizePixel = 4
        Tabs[Name].BorderColor3 = Color3.fromRGB(0,0,0)
        
        TabStroke.Color = Color3.fromRGB(40,40,40)
        TabStroke.Thickness = 3

        button.Size = UDim2.new(1, 0, 0, 50)
        button.BackgroundTransparency = 0.2
        button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        button.Text = Name
        button.TextSize = 20
        button.TextColor3 = Color3.fromRGB(180, 180, 180)
        button.Font = Enum.Font.SourceSansBold
        button.TextXAlignment = Enum.TextXAlignment.Center

        line.Size = UDim2.new(0, 4, 1, 0)
        line.Position = UDim2.new(1, -4, 0, 0)
        line.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        line.Visible = true

        button.MouseButton1Click:Connect(function()
            for _, v in pairs(ContentFrame:GetChildren()) do
                v.Visible = false
            end
            Tabs[Name].Visible = true
            if ActiveLine then
                ActiveLine.Position = UDim2.new(1, -4, 0, 0)
                ActiveLine.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
                ActiveButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                ActiveButton.TextColor3 = Color3.fromRGB(180, 180, 180)
            end
            line.Position = UDim2.new(0, 0, 0, 0)
            line.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
            ActiveLine = line
            ActiveButton = button
            button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
        end)

        function Window:Section(TabName, SectionName, options)
            options = options or {}
            local Width = options.Width or 300
            local Height = options.Height or 200
            local PosX = options.PosX or 0
            local PosY = options.PosY or 0

            local Section = Instance.new("ScrollingFrame", Tabs[TabName])
            local SectionStroke = Instance.new("UIStroke", Section)
            local SectionLabel = Instance.new("TextLabel", Section)
            local Layout = Instance.new("UIListLayout", Section)

            Section.Size = UDim2.new(0, Width, 0, Height)
            Section.Position = UDim2.new(0, PosX, 0, PosY)
            Section.BackgroundTransparency = 0
            Section.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            Section.BorderSizePixel = 0
            Section.ScrollBarThickness = 6
            Section.ClipsDescendants = true
            Section.ScrollBarImageColor3 = Color3.fromRGB(60, 60, 60)

            SectionStroke.Color = Color3.fromRGB(80, 80, 80)
            SectionStroke.Thickness = 2

            SectionLabel.Size = UDim2.new(0, 125, 0, 20)
            SectionLabel.Position = UDim2.new(0, 15, 0, 10)
            SectionLabel.Text = SectionName
            SectionLabel.TextSize = 16
            SectionLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
            SectionLabel.Font = Enum.Font.SourceSansBold
            SectionLabel.BackgroundTransparency = 1
            SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
            SectionLabel.TextYAlignment = Enum.TextYAlignment.Top

            Layout.Padding = UDim.new(0, 5)
            Layout.SortOrder = Enum.SortOrder.LayoutOrder

            return Section
        end

    end

    return Window
end

return Lib
