local Lib = {}

if game.CoreGui:FindFirstChild("ScriptGui") then
    game.CoreGui.ScriptGui:Destroy()
end

local player = game.Players.LocalPlayer
local Uis = game:GetService("UserInputService")
local TS = game:GetService("TweenService")
local Mouse = player:GetMouse()
local MarketplaceService = game:GetService("MarketplaceService")
local placeId = game.PlaceId
local Minimized, MinimizeUsable, visible, Usable = false, true, true, true
if _G.HideKeybind == nil then _G.HideKeybind = Enum.KeyCode.P end

local PlaceInfo = MarketplaceService:GetProductInfo(placeId, Enum.InfoType.Asset)

local ScriptGui = Instance.new("ScreenGui", game.CoreGui)
ScriptGui.Name = "ScriptGui"
ScriptGui.ResetOnSpawn = false

Uis.InputBegan:Connect(function(input, gameProcesses)
    if gameProcesses or input.KeyCode ~= _G.HideKeybind or not Usable then return end
    Usable = false
    visible = not visible
    for _, v in pairs(ScriptGui:GetDescendants()) do
        if v:IsA("GuiObject") then
            v.Visible = visible
            local targetTransparency = visible and 0 or 1
            local tween = TS:Create(v, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {BackgroundTransparency = targetTransparency})
            tween:Play()
        end
    end
    wait(0.5)
    Usable = true
end)




function Lib:Window(Name)
    local Window = {}

    local Main = Instance.new("Frame", ScriptGui)
    local MainCorner = Instance.new("UICorner", Main)
    local ButtonMinimize = Instance.new("TextButton", Main)
    local MainGradient = Instance.new("UIGradient", Main)
    local Sections = Instance.new("ScrollingFrame", Main)
    local Sectionslayout = Instance.new("UIListLayout", Sections)

    Main.Name = "Window"
    Main.Active = true
    Main.Size = UDim2.new(0, 800, 0, 600)
    Main.Position = UDim2.new(0.5, -400, 0.5, -300)
    Main.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    MainCorner.CornerRadius = UDim.new(0, 25)

    MainGradient.Color = ColorSequence.new(Color3.fromRGB(30, 30, 40), Color3.fromRGB(50, 50, 60))
    MainGradient.Rotation = 45

    ButtonMinimize.Size = UDim2.new(0, 30, 0, 30)
    ButtonMinimize.Position = UDim2.new(1, -40, 0, 10)
    ButtonMinimize.Text = "X"
    ButtonMinimize.TextSize = 12
    ButtonMinimize.TextColor3 = Color3.fromRGB(200, 200, 200)
    ButtonMinimize.BackgroundColor3 = Color3.fromRGB(150, 40, 40)
    ButtonMinimize.BorderSizePixel = 0
    ButtonMinimize.AutoButtonColor = false

    local function AddDrag(frame)
        local dragging, offset = false, Vector2.new()
        frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                offset = Vector2.new(input.Position.X - frame.AbsolutePosition.X, input.Position.Y - frame.AbsolutePosition.Y)
            end
        end)
        frame.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                frame.Position = UDim2.new(0, Mouse.X - offset.X, 0, Mouse.Y - offset.Y)
            end
        end)
        frame.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
    end
    AddDrag(Main)


    ButtonMinimize.MouseButton1Click:Connect(function()
        if not MinimizeUsable then return end
        MinimizeUsable = false
        Minimized = not Minimized
        ButtonMinimize.Text = Minimized and "â€•" or "X"

        local targetSize = Minimized and UDim2.new(0, 800, 0, 40) or UDim2.new(0, 800, 0, 600)
        TS:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = targetSize}):Play()
        Sections.Visible = not Minimized

        wait(0.5)
        MinimizeUsable = true
    end)


    Sections.Position = UDim2.new(0.05, 0, 0.2, 0)
    Sections.Size = UDim2.new(0.9, 0, 0.7, 0)
    Sections.BorderSizePixel = 0
    Sections.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    Sections.ScrollBarThickness = 5
    Sections.CanvasSize = UDim2.new(0, 0, 1, 0)
    Sections.ScrollingDirection = Enum.ScrollingDirection.X
    Sectionslayout.FillDirection = Enum.FillDirection.Horizontal
    Sectionslayout.SortOrder = Enum.SortOrder.LayoutOrder
    Sectionslayout.Padding = UDim.new(0, 20)

    local function UpdateCanvasSize()
        Sections.CanvasSize = UDim2.new(0, Sectionslayout.AbsoluteContentSize.X, 1, 0)
    end
    Sectionslayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(UpdateCanvasSize)
    UpdateCanvasSize()

    function Window:CreateSection(sectionName)
        local Section = Instance.new("Frame", Sections)
        Section.Size = UDim2.new(0, 250, 1, 0)
        Section.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
        Section.BorderSizePixel = 0

        local SectionCorner = Instance.new("UICorner", Section)
        SectionCorner.CornerRadius = UDim.new(0, 18)

        local SectionLabel = Instance.new("TextLabel", Section)
        SectionLabel.Size = UDim2.new(1, 0, 0, 40)
        SectionLabel.BackgroundTransparency = 1
        SectionLabel.Text = sectionName
        SectionLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
        SectionLabel.Font = Enum.Font.GothamBold
        SectionLabel.TextSize = 18
    end

    return Window
    end
return Lib
